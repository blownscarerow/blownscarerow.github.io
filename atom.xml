<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://gaixu-github.github.io/</id>
    <title>我没有失眠啊i</title>
    <updated>2020-06-20T01:50:34.894Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://gaixu-github.github.io/"/>
    <link rel="self" href="https://gaixu-github.github.io/atom.xml"/>
    <subtitle>每天一个小技巧</subtitle>
    <logo>https://gaixu-github.github.io/images/avatar.png</logo>
    <icon>https://gaixu-github.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 我没有失眠啊i</rights>
    <entry>
        <title type="html"><![CDATA[数据可视化制作]]></title>
        <id>https://gaixu-github.github.io/post/shu-ju-ke-shi-hua-zhi-zuo/</id>
        <link href="https://gaixu-github.github.io/post/shu-ju-ke-shi-hua-zhi-zuo/">
        </link>
        <updated>2020-06-20T01:41:44.000Z</updated>
        <content type="html"><![CDATA[<p>前段时间看BBC新闻发现这样一个图片，便好奇怎么做出来。查阅相关资料后，便做了一个类似的出来。分为两步，一是数据的准备，二是可视化图表的制作。</p>
<img src="http://image.scorner.cn/qiniulmg/20200620075502.gif" alt="测试1" style="zoom: 50%;float:left" />
<h4 id="一-数据准备">一、数据准备</h4>
<h5 id="1每日疫情变化网站推荐">1.每日疫情变化网站推荐</h5>
<p>国内:</p>
<pre><code class="language-html">https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner#tab4 
</code></pre>
<p>国外：</p>
<pre><code class="language-html">https://www.worldometers.info/coronavirus/
https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6
</code></pre>
<h5 id="2数据爬取">2.数据爬取</h5>
<p>以worldometer为例,进入到每个国家详情中发现每日数据在图片中，通过搜索图片中的数据找到了数据的地址</p>
<img src="http://image.scorner.cn/qiniulmg/20200620083321.png" alt="QQ图片20200620083020" style="zoom: 50%;" float:left/>
<p>这样我们可以通过xpath定位再通过正则提取到数据，这样我们就拿到了一个国家的整体数据</p>
<pre><code class="language-python">et = etree.HTML(xml)
data=et.xpath('//div[@style=&quot;margintop:10px;marginbottom:40px;&quot;]/script[@type=&quot;text/javascript&quot;]/text()')[0]
 
# 提取日期
dates = re.search(&quot;categories: (.*?)},&quot;, data).group()
dates = dates.replace(&quot;categories: [&quot;,&quot;&quot;)
dates = dates.replace(&quot;]        },&quot;,&quot;&quot;)
 
# 提取数量
counts = re.search(r&quot;data:\s+(.*?)\s+}],&quot;, data).group()
counts = counts.replace(&quot;data: [&quot;,&quot;&quot;)
counts = counts.replace(&quot;]        }],&quot;, &quot;&quot;)

# 数据整理
for i in zip(dates,counts):
    print(i)
</code></pre>
<p>所有国家的数据</p>
<p>通过观察，每个国家的地址（<mark>部分国家例外</mark>）为</p>
<pre><code class="language-html">https://www.worldometers.info/coronavirus/country/(国家英文小写)
</code></pre>
<p>可以在首页提取到每个国家的名字再使用lower函数进行处理，再依次遍历写入excel即可</p>
<img src="http://image.scorner.cn/qiniulmg/20200620084607.png" alt="image-20200620084605687" style="zoom: 50%;float:left" />
<p>最终，我们拿到了数据</p>
<img src="http://image.scorner.cn/qiniulmg/20200620085212.png" alt="image-20200620085209455" style="zoom: 50%;" />
<h4 id="二-可视化制作">二、可视化制作</h4>
<p>推荐一个可视化网站，注册一个账号即可，免费使用</p>
<pre><code class="language-html">https://app.flourish.studio/login
</code></pre>
<img src="http://image.scorner.cn/qiniulmg/20200620085743.png" alt="image-20200620085635032" style="zoom:40%;float:left" />
<p>里面内置了很多可视化模板，并且免费</p>
<img src="http://image.scorner.cn/qiniulmg/20200620085739.png" alt="image-20200620085737928" style="zoom:50%;float:left" />
<p>在DATA将数据进行导入</p>
<img src="http://image.scorner.cn/qiniulmg/20200620090216.png" alt="image-20200620090214537" style="zoom:33%;flaot:left" />
<p>在caption中，可以设置事件触发，比如满足什么条件将会出现什么</p>
<img src="http://image.scorner.cn/qiniulmg/20200620092131.png" alt="image-20200620092127694" style="zoom:50%;float:left" />
<p>在右侧对需要展示的数据进行选择,格外注意，Image可以设置可视化的头像</p>
<img src="http://image.scorner.cn/qiniulmg/20200620090403.png" alt="image-20200620090401519" style="zoom:50%;float:left" />
<p>在preview中则可以对持续时间，标签颜色进行选择</p>
<img src="C:\Users\盖旭\AppData\Roaming\Typora\typora-user-images\image-20200620090827975.png" alt="image-20200620090827975" style="zoom:50%;float:left" />
<p>三、结果展示</p>
<img src="http://image.scorner.cn/qiniulmg/20200620094005.gif" style="zoom: 67%;float:left" />
<p>希望疫情早早结束</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次有声小说爬取]]></title>
        <id>https://gaixu-github.github.io/post/ji-yi-ci-shuo-you-sheng-yin-pin-pa-qu/</id>
        <link href="https://gaixu-github.github.io/post/ji-yi-ci-shuo-you-sheng-yin-pin-pa-qu/">
        </link>
        <updated>2020-06-19T03:19:05.000Z</updated>
        <content type="html"><![CDATA[<p><mark>本文仅供学习使用</mark></p>
<p>突然心血来潮想听恐怖小说，在网上找了找发现大部分在线有声小说只能在游览器里面听而不能下载到本地，就很不方便，这里记录一下对一篇有声小说的全集下载。步骤分为两步，一找到链接，二批量下载。</p>
<p>小说地址：http://www.lanren6.com/book/43041.html</p>
<h3 id="一-小说音频地址找寻">一、小说音频地址找寻</h3>
<h4 id="1依次进入到播放位置">1.依次进入到播放位置</h4>
<img src="http://image.scorner.cn/qiniulmg/20200619101958.png" alt="image-20200619101934149" style="zoom:60%;float:left" />
<img src="http://image.scorner.cn/qiniulmg/20200619102429.png" alt="image-20200619102426676" style="zoom:50%;float:left" />
<h4 id="2idm获取下载地址">2.idm获取下载地址</h4>
<img src="http://image.scorner.cn/qiniulmg/20200619101551.png" alt="image-20200619101535118" style="zoom: 67%;float:left" />
<h4 id="3规律寻找">3.规律寻找</h4>
<p>小说一共125集，经过多次抓取地址发现：</p>
<p>前93集地址为</p>
<pre><code class="language-html">http://kiohhbf.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/(001-093).mp3
</code></pre>
<p>94-125地址为</p>
<pre><code class="language-html">http://tingmp33.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/(094-125).mp3
</code></pre>
<h3 id="二-代码实现">二、代码实现</h3>
<p>我们用python爬虫带实现批量下载，代码如下</p>
<pre><code class="language-python">import requests
import time

# 设置请求头，模拟游览器
headers = {
    'user-agent': &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.163 Safari/535.1&quot;
}

# 进行循环遍历
for i in range(1, 125):
    # 有时候爬取太快会报错，可以让他适当停一停
    # time.sleep(0.2)
    url1 = 'http://kiohhbf.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/{:0&gt;3d}.mp3'.format(i)    # 前93章的地址
    url2 = 'http://tingmp33.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/{:0&gt;3d}.mp3'.format(i)   # 94-125章地址
    if i &lt;= 93:
        res = requests.get(url=url1, headers=headers)
    else:
        res = requests.get(url=url2, headers=headers)
    music = res.content
    with open('走阴人{}.mp3'.format(i), 'wb') as file:  # 保存到本地的文件名
        file.write(music)
        file.flush()
</code></pre>
<h3 id="三-结果">三、结果</h3>
<p>这样我们就把全集给下载下来了。😁</p>
<h3 id="img-srchttpimagescornercnqiniulmg20200619111735png-altqq图片20200619111652-stylezoom-67"><img src="http://image.scorner.cn/qiniulmg/20200619111735.png" alt="QQ图片20200619111652" style="zoom: 67%;" /></h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[微信X5内核]]></title>
        <id>https://gaixu-github.github.io/post/wei-xin-x5-nei-he/</id>
        <link href="https://gaixu-github.github.io/post/wei-xin-x5-nei-he/">
        </link>
        <updated>2020-06-19T01:02:31.000Z</updated>
        <content type="html"><![CDATA[<p><mark>注：本方法仅供个人学习使用，仅为讨论学习X5内核</mark></p>
<blockquote>
<p>X5内核是腾讯基于开源Webkit优化的浏览器渲染引擎，目前除了微信、手机QQ、京东等有30多款APP内置浏览器都是基于X5内核。</p>
</blockquote>
<p>我们可以在微信中开启X5内核debug等进行网页的调试等操作，我们以微信中的大学习为例，实现视频的快速跳过。</p>
<h4 id="一-使用内核调出控制台">一、使用内核，调出控制台</h4>
<pre><code class="language-html">debugmm.qq.com/?forcex5=true 

http://debugx5.qq.com
</code></pre>
<p>将以上链接在微信打开，会得到下面的效果，打开vConsole调试功能</p>
<img src="http://image.scorner.cn/qiniulmg/20200619073515.gif" style="zoom: 100%;float:left" />
<h4 id="二-输入代码">二、输入代码</h4>
<pre><code class="language-html">document.getElementById('Bvideo').currentTime=999;
</code></pre>
<p>打开大学习,待视频开始播放后，将代码复制到vConsole中，便实现了视频的跳过</p>
<img src="http://image.scorner.cn/qiniulmg/20200619081634.gif" style="zoom:100%;float:left" />
<h4 id="三-注意事项">三、注意事项</h4>
<h5 id="1一般来说微信内置x5内核如果提示未安装就安装来安装线上内核-如果已安装千万不要再重新安装否则可能会发生奇怪的错误">1.一般来说微信内置X5内核，如果提示未安装，就安装来安装线上内核。<mark>如果已安装千万不要再重新安装，否则可能会发生奇怪的错误</mark>。</h5>
<pre><code class="language-html">http://debugtbs.qq.com 
</code></pre>
<img src="http://image.scorner.cn/qiniulmg/20200619090147.png" style="zoom:100%;float:left" />
<img src="http://image.scorner.cn/qiniulmg/20200619090157.gif" style="zoom:100%;float:left" />
<h4 id="2关闭右下角vconsole调试窗口">2.关闭右下角vConsole调试窗口</h4>
<pre><code class="language-html">http://debugx5.qq.com
</code></pre>
<p>重新打开上面链接 取消vConsole的选择即可</p>
<img src="http://image.scorner.cn/qiniulmg/20200619090052.gif" style="zoom:100%;float:left" />
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ 钉钉群直播下载]]></title>
        <id>https://gaixu-github.github.io/post/dingding/</id>
        <link href="https://gaixu-github.github.io/post/dingding/">
        </link>
        <updated>2020-06-16T03:29:57.000Z</updated>
        <content type="html"><![CDATA[<p><mark>注意：只有钉钉群直播才能下载，视频会议无法下载</mark></p>
<p>本学期受疫情的影响，暂不开学，线上上课，并且返校后进行考试，一些课程用钉钉上，有回放，复习起来比较方便但是看起来不方便，一是只能用钉钉看，二是在线看，<s>费流量啊</s>⚡️，所以尝试下载下来但是………….​</p>
<img src="http://image.scorner.cn/qiniulmg/20200618142308.png" style="zoom:250%;float:left" />
<p>从网上找了找，发现钉钉的直播流为m3u8格式，那么方法就很清楚了，分为两步，获取m3u8地址然后进行下载。</p>
<h2 id="一获取m3u8地址">一.获取m3u8地址</h2>
<p>我们用fidder抓包来获取m3u8地址</p>
<h3 id="1fidder的设置">1.fidder的设置</h3>
<p>根据以下方法设置并且重启</p>
<img src="http://image.scorner.cn/qiniulmg/20200618142314.gif" style="zoom:100%;float:left" />
<h3 id="2打开钉钉群直播">2.打开钉钉群直播</h3>
<img src="http://image.scorner.cn/qiniulmg/20200618142320.gif" alt="钉钉" style="zoom:100%;float:left" />
<p><mark>选择内容类型为application的那个保存url</mark></p>
<p>这样我们就获取了m3u8地址</p>
<h2 id="二用m3u8下载器进行下载">二.用m3u8下载器进行下载</h2>
<h3 id="1下载过程">1.下载过程</h3>
<img src="http://image.scorner.cn/qiniulmg/20200618143807.gif" style="zoom:100%;" />
<p>😃下载完成</p>
<img src="http://image.scorner.cn/qiniulmg/20200618155049.png" style="zoom: 100%;float:left" />
<h3 id="2注意问题">2.注意问题</h3>
<h4 id="a误报">a.误报</h4>
<p><mark>部分电脑可能出现误报的情形,点击更多信息运行，亲测无毒</mark></p>
<img src="http://image.scorner.cn/qiniulmg/20200618142331.png" style="zoom:120%;float:left" />
<h4 id="b下载存放位置">b.下载存放位置</h4>
<p>在Downloads文件夹下</p>
<img src="http://image.scorner.cn/qiniulmg/20200618142335.png" style="zoom:100%;float:left" />
<h2 id="三-文件地址">三、文件地址</h2>
<pre><code class="language-html">https://thegai.lanzous.com/b01bhri7c
</code></pre>
<p>均为绿板，无需安装，解压后即可使用。</p>
]]></content>
    </entry>
</feed>